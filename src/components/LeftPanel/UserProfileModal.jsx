import React, { useState, useEffect } from "react";
import "./UserProfileModal.css";

function UserProfileModal({ onClose }) {
  const [user, setUser] = useState(null);
  const [groups, setGroups] = useState([]);
  const [loading, setLoading] = useState(true);
  const [showHelp, setShowHelp] = useState(false);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const token = localStorage.getItem("access");

        const [userResponse, groupsResponse] = await Promise.all([
          fetch("http://localhost:8000/accounts/api/user/", {
            headers: { Authorization: `Bearer ${token}` },
          }),
          fetch("http://localhost:8000/api/groups/", {
            headers: { Authorization: `Bearer ${token}` },
          }),
        ]);

        if (!userResponse.ok || !groupsResponse.ok) {
          throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö");
        }

        const userData = await userResponse.json();
        const groupsData = await groupsResponse.json();

        setUser(userData);
        setGroups(groupsData);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) {
    return (
      <div className="profile-modal-overlay" onClick={onClose}>
        <div className="profile-modal-content" onClick={(e) => e.stopPropagation()}>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  if (!user) return null;

  const nameInitial = user.name ? user.name.charAt(0).toUpperCase() : "?";

  const groupName =
    groups.find((group) => group.id === user.group)?.name || "–ù–µ —É–∫–∞–∑–∞–Ω–∞";

  return (
    <div className="profile-modal-overlay" onClick={onClose}>
      <div className="profile-modal-content" onClick={(e) => e.stopPropagation()}>
        <div className="profile-header">
          <div className="avatar-placeholder">
            <span>{nameInitial}</span>
          </div>
          <h2 className="profile-title">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
          <button className="custom-close-btn" onClick={onClose}>‚úï</button>
        </div>

        <div className="profile-info">
          <div className="info-item">
            <label>–§–ò–û:</label>
            <span>{user.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
          </div>

          <div className="info-item">
            <label>–†–æ–ª—å:</label>
            <span>{user.role || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
          </div>

          {user.role === "—Å—Ç—É–¥–µ–Ω—Ç" && (
            <>
              <div className="info-item">
                <label>–ù–æ–º–µ—Ä –∑–∞—á—ë—Ç–Ω–æ–π –∫–Ω–∏–∂–∫–∏:</label>
                <span>{user.student_number || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
              </div>
              <div className="info-item">
                <label>–ì—Ä—É–ø–ø–∞:</label>
                <span>{groupName}</span>
              </div>
            </>
          )}

          <div className="info-item">
            <label>Email:</label>
            <span>{user.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}</span>
          </div>
        </div>

        <div className="help-support">
          <button className="help-button" onClick={() => setShowHelp(!showHelp)}>‚ùì</button>
          {showHelp && (
            <div className="help-popup">
              <p><strong>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</strong><br />–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω–µ–ø–æ–ª–∞–¥–∫–∏,<br />–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É:</p>
              <p><a href="mailto:testpochta@gmail.com">testpochta@gmail.com</a></p>
              <ul>
                <li>üìå –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã</li>
                <li>üë§ –í–∞—à–µ –§–ò–û</li>
                <li>üéì –ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã</li>
              </ul>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

export default UserProfileModal;
